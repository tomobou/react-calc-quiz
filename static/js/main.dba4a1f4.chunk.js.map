{"version":3,"sources":["index.tsx"],"names":["NumberSelector","values","Array","map","_","i","toString","className","slice","value","onClick","props","React","Component","Questioner","this","currentQuiz","whichQuiz","quizs","length","q","wrongCount","padStart","QuizSelector","AnswerResultsView","results","sort","a","b","endTime","startTime","reverse","totalLapTime","result","lapTime","wrongCountResult","lapTimeResult","quiz","join","toFixed","craeteQuizs","quizLevel","quizLevel1","push","arr","j","Math","random","swap","shuffle","filter","endsWith","Game","state","undefined","parseInt","correctAnswerTime","Date","now","answerStartTime","setState","handleStart","handleSelect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dba4a1f4.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\ninterface NumberSelectorProps {\n    onClick: (value: string) => void\n}\n\nclass NumberSelector extends React.Component<NumberSelectorProps> {\n    render() {\n        let values = [...Array(11)].map((_, i) => i.toString());\n        return (\n            <div>\n                <div className=\"number-selector-row\">\n                    {values.slice(0,1).map((value) => {\n                        return (\n                            <button key={\"number-selector-\" + value} className=\"number-selector\" onClick={() => this.props.onClick(value)}>{value}</button>\n                        )\n                    })}\n                </div>\n                <div className=\"number-selector-row\">\n                    {values.slice(1,6).map((value) => {\n                        return (\n                            <button key={\"number-selector-\" + value} className=\"number-selector\" onClick={() => this.props.onClick(value)}>{value}</button>\n                        )\n                    })}\n                </div>\n                <div className=\"number-selector-row\">\n                    {values.slice(6,11).map((value) => {\n                        return (\n                            <button key={\"number-selector-\" + value} className=\"number-selector\" onClick={() => this.props.onClick(value)}>{value}</button>\n                        )\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n\ninterface QuestionerProps {\n    quizs: Quiz[],\n    currentQuiz?: Quiz,\n    whichQuiz: number,\n    onClick: (value: string) => void\n    wrongCount: number\n}\n\nclass Questioner extends React.Component<QuestionerProps> {\n    render() {\n        if(this.props.currentQuiz){\n            return(\n            <div className=\"questioner\">\n                <h3>\n                    {this.props.whichQuiz+1}問目（ぜんぶで {this.props.quizs.length} 問）\n                </h3>\n                <div className=\"question-content\">\n                    {this.props.currentQuiz && this.props.currentQuiz.q}\n                    {this.props.wrongCount > 0 && <div className='shake'>{\"\".padStart(this.props.wrongCount,\"×\")}</div>}\n                </div>\n            </div>\n            )\n        }else{\n            return(\n                <QuizSelector onClick={(value)=>this.props.onClick(value)}></QuizSelector>\n                )\n        }\n    }\n}\n\ninterface QuizSelectorProps {\n    onClick: (value: string) => void\n}\n\nclass QuizSelector extends React.Component<QuizSelectorProps> {\n    render() {\n        return(\n            <div className=\"questioner\">\n                <h3>もんだいをえらんでね！</h3>\n                <div className=\"question-content\">\n                <button onClick={() => this.props.onClick(\"tasizan1_3\")}>れんしゅう</button>\n                </div>\n                <div className=\"question-content\">\n                  <button onClick={() => this.props.onClick(\"tasizan1_ALL\")}>たしざん１</button>\n                </div>\n            </div>\n            )\n    }\n}\n\ninterface AnswerResultsViewProps {\n    totalLapTime: number,\n    results: AnswerResult[]\n}\n\nclass AnswerResultsView extends React.Component<AnswerResultsViewProps> {\n    render() {\n        const results = this.props.results.sort((a,b)=> (a.wrongCount - b.wrongCount === 0)? (a.endTime!!-a.startTime!!)-(b.endTime!!-b.startTime!!): (a.wrongCount - b.wrongCount)).reverse();\n        \n        return(\n            <div>\n                <div>{this.props.totalLapTime/1000}秒でできたよ。</div>\n                <table className=\"answer-results-view\">\n                    <thead>\n                        <th>問題</th>\n                        <th>間違えた数</th>\n                        <th>回答時間</th>\n                    </thead>\n                    <tbody>\n                    {results.map((result) => {\n                        const lapTime=(result.endTime!! - result.startTime!!);\n                        const wrongCountResult = result.wrongCount>0? \"red\":\"\";\n                        const lapTimeResult = lapTime<=1200? \"\" : lapTime<3000? \"yellow\" : \"red\";\n                            return (\n                                <tr>\n                                    <td>{result.quiz.q}</td>\n                                    <td className={['align-right',wrongCountResult].join(' ')}>{result.wrongCount}回</td>\n                                    <td className={['align-right',lapTimeResult].join(' ')}>{(lapTime/1000).toFixed(3)}秒</td>\n                                </tr>        \n                                )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n            )\n    }\n}\n\n\nfunction shuffle<T>(arr: Array<T>):Array<T> {\n    for (var i = arr.length - 1; i > 0; i = 0 | i - 1) {\n        var j = 0 | Math.random() * (i + 1);\n        var swap = arr[i];\n        arr[i] = arr[j];\n        arr[j] = swap;\n    }\n    return arr;\n}\n\ninterface Quiz {\n  q: string,\n  a: number\n}\ninterface AnswerResult {\n    quiz: Quiz,\n    wrongCount: number,\n    startTime?: number,\n    endTime?: number\n  }\n\n\ninterface GameProps {\n\n}\ninterface GameStates {\n    quizs: Quiz[],\n    results: AnswerResult[]\n    currentQuiz?: Quiz,\n    whichQuiz: number,\n    wrongCount: number,\n    startTime?: number,\n    endTime?: number\n}\n\nfunction craeteQuizs(quizLevel: string): Array<Quiz>{\n    // 答えが10までのたしざん\n    let quizLevel1 = Array<Quiz>();\n    for(let a = 0; a < 10; a++){\n        for(let b = 0; b < 10; b++){\n            quizLevel1.push({q:`${a} + ${b} =`, a:(a+b)})\n        }\n    }\n    quizLevel1 = shuffle(quizLevel1.filter(quiz => quiz.a <= 10));\n    return quizLevel.endsWith(\"_3\")? quizLevel1.slice(0,3):quizLevel1\n}\n\nclass Game extends React.Component<GameProps, GameStates> {\n    constructor(props: GameProps | Readonly<GameProps>) {\n        super(props);\n        //quizLevel1 = quizLevel1.slice(0,3);// テスト用に3問にする\n        this.state = {\n            quizs: [],\n            results: [],\n            currentQuiz: undefined,\n            whichQuiz: -1,\n            wrongCount: 0\n        };\n    }\n    handleSelect(value: string) {\n        if(this.state.currentQuiz){  \n            if(this.state.currentQuiz.a === parseInt(value)) {\n                const correctAnswerTime = Date.now();\n                const results = this.state.results;\n                const answerStartTime = (results.length>0)? results[results.length-1].endTime : this.state.startTime;\n                results.push({    quiz: this.state.currentQuiz,\n                    wrongCount: this.state.wrongCount,\n                    startTime: answerStartTime,\n                    endTime: correctAnswerTime\n                })\n                if(this.state.whichQuiz+1 === this.state.quizs.length){\n                        this.setState(state => ({\n                            currentQuiz: undefined,\n                            results: results,\n                            whichQuiz: -1,\n                            endTime: Date.now(),\n                            wrongCount: 0\n                        }));\n                    }else{\n                        this.setState(state => ({\n                            currentQuiz: this.state.quizs[this.state.whichQuiz+1],\n                            results: results,\n                            whichQuiz: this.state.whichQuiz + 1,\n                            wrongCount: 0\n                        }));\n                    }\n            }else{\n                this.setState(state => ({wrongCount:this.state.wrongCount+1}));\n            }\n        }\n    }\n    handleStart(value: string){\n        const quizs = craeteQuizs(value)\n        this.setState(state => ({\n            quizs: quizs,\n            results: [],\n            currentQuiz: quizs[0],\n            whichQuiz: 0,\n            startTime: Date.now(),\n            endTime: undefined\n        }));\n    }\n    render() {\n        return (\n            <div className=\"game\">\n                <Questioner quizs={this.state.quizs} currentQuiz={this.state.currentQuiz} whichQuiz={this.state.whichQuiz} onClick={(value) => this.handleStart(value)} wrongCount={this.state.wrongCount}/>\n                <NumberSelector onClick={(value) => this.handleSelect(value)} />\n                {this.state.endTime && <AnswerResultsView totalLapTime={this.state.endTime!! - this.state.startTime!!} results={this.state.results} />}\n            </div>\n        )\n    }\n}\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}