{"version":3,"sources":["index.tsx"],"names":["NumberSelector","values","Array","map","_","i","toString","className","value","onClick","props","React","Component","Questioner","this","currentQuiz","whichQuiz","quizs","length","q","wrong","Game","quizLevel1","a","b","push","arr","j","Math","random","swap","shuffle","filter","quiz","slice","state","undefined","setState","parseInt","endTime","Date","now","startTime","handleStart","handleSelect","ReactDOM","render","document","getElementById"],"mappings":"oNASMA,E,4JACF,WAAU,IAAD,OACDC,EAAS,YAAIC,MAAM,KAAKC,KAAI,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,cAC5C,OACI,qBAAKC,UAAU,sBAAf,SACKN,EAAOE,KAAI,SAACK,GACT,OACI,wBAAyCD,UAAU,kBAAkBE,QAAS,kBAAM,EAAKC,MAAMD,QAAQD,IAAvG,SAAgHA,GAAnG,mBAAqBA,Y,GAP7BG,IAAMC,WAuB7BC,E,4JACF,WAAU,IAAD,OACL,OAAGC,KAAKJ,MAAMK,YAEd,sBAAKR,UAAU,aAAf,UACI,+BACKO,KAAKJ,MAAMM,UAAU,EAD1B,8CACqCF,KAAKJ,MAAMO,MAAMC,OADtD,mBAGA,gCACKJ,KAAKJ,MAAMK,aAAeD,KAAKJ,MAAMK,YAAYI,GAC5B,IAArBL,KAAKJ,MAAMU,OAAkB,qBAAKb,UAAU,QAAf,qBAM9B,sBAAKA,UAAU,aAAf,UACI,oGACA,wBAAQE,QAAS,kBAAM,EAAKC,MAAMD,QAAQ,aAA1C,mD,GAlBKE,IAAMC,W,IAuDzBS,E,kDACF,WAAYX,GAAyC,IAAD,sBAChD,cAAMA,GAIN,IADA,IAAIY,EAAapB,QACTqB,EAAI,EAAGA,EAAI,GAAIA,IACnB,IAAI,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACnBF,EAAWG,KAAK,CAACN,EAAE,GAAD,OAAII,EAAJ,cAAWC,EAAX,MAAkBD,EAAGA,EAAEC,IAPD,OAYhDF,GAFAA,EAvCR,SAAoBI,GAChB,IAAK,IAAIrB,EAAIqB,EAAIR,OAAS,EAAGb,EAAI,EAAGA,EAAI,EAAIA,EAAI,EAAG,CAC/C,IAAIsB,EAAI,EAAIC,KAAKC,UAAYxB,EAAI,GAC7ByB,EAAOJ,EAAIrB,GACfqB,EAAIrB,GAAKqB,EAAIC,GACbD,EAAIC,GAAKG,EAEb,OAAOJ,EAgCUK,CAAQT,EAAWU,QAAO,SAAAC,GAAI,OAAIA,EAAKV,GAAK,QAEjCW,MAAM,EAAE,GAChC,EAAKC,MAAQ,CACTlB,MAAOK,EACPP,iBAAaqB,EACbpB,WAAY,GAhBgC,E,gDAmBpD,SAAaR,GAAgB,IAAD,OACrBM,KAAKqB,MAAMpB,cACVD,KAAKuB,UAAS,SAAAF,GAAK,MAAK,CAACf,OAAM,MAC5BN,KAAKqB,MAAMpB,YAAYQ,IAAMe,SAAS9B,GAC9BM,KAAKqB,MAAMnB,UAAU,IAAMF,KAAKqB,MAAMlB,MAAMC,OAC3CJ,KAAKuB,UAAS,SAAAF,GAAK,MAAK,CACpBpB,iBAAaqB,EACbpB,WAAY,EACZuB,QAASC,KAAKC,UAGlB3B,KAAKuB,UAAS,SAAAF,GAAK,MAAK,CACpBpB,YAAa,EAAKoB,MAAMlB,MAAM,EAAKkB,MAAMnB,UAAU,GACnDA,UAAW,EAAKmB,MAAMnB,UAAY,MAI9CF,KAAKuB,UAAS,SAAAF,GAAK,MAAK,CAACf,OAAM,S,yBAI3C,SAAYZ,GAAe,IAAD,OACtBM,KAAKuB,UAAS,SAAAF,GAAK,MAAK,CACpBpB,YAAa,EAAKoB,MAAMlB,MAAM,GAC9BD,UAAW,EACX0B,UAAWF,KAAKC,MAChBF,aAASH,Q,oBAGjB,WAAU,IAAD,OAEL,OACI,sBAAK7B,UAAU,OAAf,UACI,cAACM,EAAD,CAAYI,MAAOH,KAAKqB,MAAMlB,MAAOF,YAAaD,KAAKqB,MAAMpB,YAAaC,UAAWF,KAAKqB,MAAMnB,UAAWP,QAAS,SAACD,GAAD,OAAW,EAAKmC,YAAYnC,IAAQY,MAAON,KAAKqB,MAAMf,QAC1K,yCAAON,KAAKqB,MAAMI,UAAYzB,KAAKqB,MAAMI,QAAUzB,KAAKqB,MAAMO,WAAa,IAAO,gDAClF,cAAC1C,EAAD,CAAgBS,QAAS,SAACD,GAAD,OAAW,EAAKoC,aAAapC,a,GAvDnDG,IAAMC,WA6DzBiC,IAASC,OACL,cAACzB,EAAD,IACA0B,SAASC,eAAe,W","file":"static/js/main.14aec84c.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\ninterface NumberSelectorProps {\n    onClick: (value: string) => void\n}\n\nclass NumberSelector extends React.Component<NumberSelectorProps> {\n    render() {\n        let values = [...Array(11)].map((_, i) => i.toString());\n        return (\n            <div className=\"number-selector-row\">\n                {values.map((value) => {\n                    return (\n                        <button key={\"number-selector-\" + value} className=\"number-selector\" onClick={() => this.props.onClick(value)}>{value}</button>\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\ninterface QuestionerProps {\n    quizs: Quiz[],\n    currentQuiz?: Quiz,\n    whichQuiz: number,\n    onClick: (value: string) => void\n    wrong?: boolean\n}\n\nclass Questioner extends React.Component<QuestionerProps> {\n    render() {\n        if(this.props.currentQuiz){\n        return(\n        <div className=\"questioner\">\n            <h3>\n                {this.props.whichQuiz+1}問目（ぜんぶで {this.props.quizs.length} 問）\n            </h3>\n            <div>\n                {this.props.currentQuiz && this.props.currentQuiz.q}\n                {this.props.wrong === true && <div className='shake'>x</div>}\n            </div>\n        </div>\n        )\n        }else{\n            return(\n                <div className=\"questioner\">\n                    <h3>もんだいをえらんでね！</h3>\n                    <button onClick={() => this.props.onClick(\"tasizan1\")}>たしざん１</button>\n                </div>\n                )\n        }\n    }\n}\n\n\n\nfunction shuffle<T>(arr: Array<T>):Array<T> {\n    for (var i = arr.length - 1; i > 0; i = 0 | i - 1) {\n        var j = 0 | Math.random() * (i + 1);\n        var swap = arr[i];\n        arr[i] = arr[j];\n        arr[j] = swap;\n    }\n    return arr;\n}\n\ninterface Quiz {\n  q: string,\n  a: number\n}\n\ninterface GameProps {\n\n}\ninterface GameStates {\n    quizs: Quiz[],\n    currentQuiz?: Quiz,\n    whichQuiz: number,\n    wrong?: boolean,\n    startTime?: number,\n    endTime?: number\n}\n\n\nclass Game extends React.Component<GameProps, GameStates> {\n    constructor(props: GameProps | Readonly<GameProps>) {\n        super(props);\n\n        // 答えが10までのたしざん\n        let quizLevel1 = Array<Quiz>();\n        for(let a = 0; a < 10; a++){\n            for(let b = 0; b < 10; b++){\n                quizLevel1.push({q:`${a} + ${b} =`, a:(a+b)})\n            }\n        }\n        quizLevel1 = shuffle(quizLevel1.filter(quiz => quiz.a <= 10));\n\n        quizLevel1 = quizLevel1.slice(0,3);// テスト用に3問にする\n        this.state = {\n            quizs: quizLevel1,\n            currentQuiz: undefined,\n            whichQuiz: -1\n        };\n    }\n    handleSelect(value: string) {\n        if(this.state.currentQuiz){  \n            this.setState(state => ({wrong:false}));\n            if(this.state.currentQuiz.a === parseInt(value)) {\n                    if(this.state.whichQuiz+1 === this.state.quizs.length){\n                        this.setState(state => ({\n                            currentQuiz: undefined,\n                            whichQuiz: -1,\n                            endTime: Date.now()\n                        }));\n                    }else{\n                        this.setState(state => ({\n                            currentQuiz: this.state.quizs[this.state.whichQuiz+1],\n                            whichQuiz: this.state.whichQuiz + 1\n                        }));\n                    }\n            }else{\n                this.setState(state => ({wrong:true}));\n            }\n        }\n    }\n    handleStart(value: string){\n        this.setState(state => ({\n            currentQuiz: this.state.quizs[0],\n            whichQuiz: 0,\n            startTime: Date.now(),\n            endTime: undefined\n        }));\n    }\n    render() {\n\n        return (\n            <div className=\"game\">\n                <Questioner quizs={this.state.quizs} currentQuiz={this.state.currentQuiz} whichQuiz={this.state.whichQuiz} onClick={(value) => this.handleStart(value)} wrong={this.state.wrong}/>\n                <div>　{this.state.endTime && (this.state.endTime - this.state.startTime!!)/1000 + \"秒でできたよ。\"}</div>\n                <NumberSelector onClick={(value) => this.handleSelect(value)} />\n            </div>\n        )\n    }\n}\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}