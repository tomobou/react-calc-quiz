{"version":3,"sources":["domain/QuizBook.tsx","components/QuizSelector.tsx","components/AnswerResultsView.tsx","index.tsx"],"names":["tasizan1","name","quizCount","quizs","Array","a","b","push","q","shuffle","filter","quiz","slice","Math","min","length","hikizan2","arr","i","j","random","swap","QuizSelector","props","quizButtons","quizBook","className","this","map","quizButton","onClick","setQuizs","React","Component","AnswerResultsView","results","sort","wrongCount","endTime","startTime","reverse","totalLapTime","result","lapTime","wrongCountResult","lapTimeResult","join","toFixed","NumberSelector","values","_","toString","value","Questioner","currentQuiz","whichQuiz","padStart","Game","state","undefined","parseInt","correctAnswerTime","Date","now","answerStartTime","setState","handleStart","handleSelect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.62fb2ec5.chunk.js","sourcesContent":["import Quiz from '../domain/Quiz';\r\n\r\n\r\nexport interface QuizBook{\r\n    name: String\r\n    quizs(quizCount?: number): Array<Quiz>\r\n}\r\n\r\nclass Tasizan1 implements QuizBook{\r\n    name = \"たしざん１\"\r\n    quizs(quizCount?: number): Array<Quiz>{\r\n        let quizs = Array<Quiz>();\r\n        // 答えが10までのたしざん\r\n        for (let a = 0; a < 10; a++) {\r\n            for (let b = 0; b < 10; b++) {\r\n                quizs.push({ q: `${a} + ${b} =`, a: (a + b) })\r\n            }\r\n        }\r\n        quizs = shuffle(quizs.filter(quiz => quiz.a <= 10));\r\n        return (quizCount) ? quizs.slice(0, Math.min(quizCount, quizs.length)) : quizs;\r\n    }\r\n}\r\nexport const tasizan1 = new Tasizan1();\r\n\r\nclass Hikizan2 implements QuizBook{\r\n    name = \"ひきざん２\"\r\n    quizs(quizCount?: number): Array<Quiz>{\r\n        let quizs = Array<Quiz>();\r\n        // 10から0までのひきざん\r\n        for (let a = 0; a < 10; a++) {\r\n            for (let b = 0; b < 10; b++) {\r\n                quizs.push({ q: `${a} - ${b} =`, a: (a - b) })\r\n            }\r\n        }\r\n        quizs = shuffle(quizs.filter(quiz => quiz.a >= 0));\r\n        return (quizCount) ? quizs.slice(0, Math.min(quizCount, quizs.length)) : quizs;\r\n    }\r\n}\r\nexport const hikizan2 = new Hikizan2();\r\n\r\n\r\nfunction shuffle<T>(arr: Array<T>): Array<T> {\r\n    for (var i = arr.length - 1; i > 0; i = 0 | i - 1) {\r\n        var j = 0 | Math.random() * (i + 1);\r\n        var swap = arr[i];\r\n        arr[i] = arr[j];\r\n        arr[j] = swap;\r\n    }\r\n    return arr;\r\n}\r\n","import React from 'react';\r\nimport Quiz from '../domain/Quiz';\r\nimport {QuizBook, tasizan1, hikizan2} from '../domain/QuizBook';\r\n\r\n\r\ninterface QuizSelectorProps {\r\n    setQuizs: (quizs:Array<Quiz>) => void\r\n}\r\n\r\n\r\ninterface QuizButton {\r\n    name: string,\r\n    quizCount?: number,\r\n    quizBook: QuizBook\r\n}\r\n\r\nexport default class QuizSelector extends React.Component<QuizSelectorProps> {\r\n    private quizButtons = Array<QuizButton>();\r\n    constructor(props: QuizSelectorProps | Readonly<QuizSelectorProps>) {\r\n        super(props);\r\n        this.quizButtons.push({name:\"れんしゅう\", quizBook:tasizan1, quizCount: 3});\r\n        this.quizButtons.push({name:\"たしざん１\", quizBook:tasizan1});\r\n        this.quizButtons.push({name:\"ひきざん２\", quizBook:hikizan2});\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"questioner\">\r\n                <h3>もんだいをえらんでね！</h3>\r\n                {this.quizButtons.map((quizButton) => {\r\n                    return(\r\n                        <div className=\"question-content\">\r\n                            <button onClick={() => this.props.setQuizs(quizButton.quizBook.quizs(quizButton.quizCount))}>{quizButton.name}</button>\r\n                        </div>\r\n                    )\r\n                    }\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport AnswerResult from '../domain/AnswerResult';\r\n\r\ninterface AnswerResultsViewProps {\r\n    totalLapTime: number,\r\n    results: AnswerResult[]\r\n}\r\n\r\nexport default class AnswerResultsView extends React.Component<AnswerResultsViewProps> {\r\n    render() {\r\n        const results = this.props.results.sort((a, b) => (a.wrongCount - b.wrongCount === 0) ? (a.endTime!! - a.startTime!!) - (b.endTime!! - b.startTime!!) : (a.wrongCount - b.wrongCount)).reverse();\r\n\r\n        return (\r\n            <div>\r\n                <div>{this.props.totalLapTime / 1000}秒でできたよ。</div>\r\n                <table className=\"answer-results-view\">\r\n                    <thead>\r\n                        <th>問題</th>\r\n                        <th>間違えた数</th>\r\n                        <th>回答時間</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {results.map((result) => {\r\n                            const lapTime = (result.endTime!! - result.startTime!!);\r\n                            const wrongCountResult = result.wrongCount > 0 ? \"red\" : \"\";\r\n                            const lapTimeResult = lapTime <= 1200 ? \"\" : lapTime < 3000 ? \"yellow\" : \"red\";\r\n                            return (\r\n                                <tr>\r\n                                    <td>{result.quiz.q}</td>\r\n                                    <td className={['align-right', wrongCountResult].join(' ')}>{result.wrongCount}回</td>\r\n                                    <td className={['align-right', lapTimeResult].join(' ')}>{(lapTime / 1000).toFixed(3)}秒</td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Quiz from './domain/Quiz';\nimport AnswerResult from './domain/AnswerResult';\nimport QuizSelector from './components/QuizSelector';\nimport AnswerResultsView from './components/AnswerResultsView';\nimport './index.css';\n\n\ninterface NumberSelectorProps {\n    onClick: (value: string) => void\n}\n\nclass NumberSelector extends React.Component<NumberSelectorProps> {\n    render() {\n        let values = [...Array(11)].map((_, i) => i.toString());\n        return (\n            <div>\n                <div className=\"number-selector-row\">\n                    {values.slice(0, 1).map((value) => {\n                        return (\n                            <button key={\"number-selector-\" + value} className=\"number-selector\" onClick={() => this.props.onClick(value)}>{value}</button>\n                        )\n                    })}\n                </div>\n                <div className=\"number-selector-row\">\n                    {values.slice(1, 6).map((value) => {\n                        return (\n                            <button key={\"number-selector-\" + value} className=\"number-selector\" onClick={() => this.props.onClick(value)}>{value}</button>\n                        )\n                    })}\n                </div>\n                <div className=\"number-selector-row\">\n                    {values.slice(6, 11).map((value) => {\n                        return (\n                            <button key={\"number-selector-\" + value} className=\"number-selector\" onClick={() => this.props.onClick(value)}>{value}</button>\n                        )\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n\ninterface QuestionerProps {\n    quizs: Quiz[],\n    currentQuiz?: Quiz,\n    whichQuiz: number,\n    setQuizs: (quizs : Quiz[]) => void\n    wrongCount: number\n}\n\nclass Questioner extends React.Component<QuestionerProps> {\n    render() {\n        if (this.props.currentQuiz) {\n            return (\n                <div className=\"questioner\">\n                    <h3>\n                        {this.props.whichQuiz + 1}問目（ぜんぶで {this.props.quizs.length} 問）\n                    </h3>\n                    <div className=\"question-content\">\n                        {this.props.currentQuiz && this.props.currentQuiz.q}\n                        {this.props.wrongCount > 0 && <div className='shake'>{\"\".padStart(this.props.wrongCount, \"×\")}</div>}\n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                <QuizSelector setQuizs={(quizs) => this.props.setQuizs(quizs)}></QuizSelector>\n            )\n        }\n    }\n}\n\n\ninterface GameProps {\n\n}\ninterface GameStates {\n    quizs: Quiz[],\n    results: AnswerResult[]\n    currentQuiz?: Quiz,\n    whichQuiz: number,\n    wrongCount: number,\n    startTime?: number,\n    endTime?: number\n}\n\nclass Game extends React.Component<GameProps, GameStates> {\n    constructor(props: GameProps | Readonly<GameProps>) {\n        super(props);\n        //quizLevel1 = quizLevel1.slice(0,3);// テスト用に3問にする\n        this.state = {\n            quizs: [],\n            results: [],\n            currentQuiz: undefined,\n            whichQuiz: -1,\n            wrongCount: 0\n        };\n    }\n    handleSelect(value: string) {\n        if (this.state.currentQuiz) {\n            if (this.state.currentQuiz.a === parseInt(value)) {\n                const correctAnswerTime = Date.now();\n                const results = this.state.results;\n                const answerStartTime = (results.length > 0) ? results[results.length - 1].endTime : this.state.startTime;\n                results.push({\n                    quiz: this.state.currentQuiz,\n                    wrongCount: this.state.wrongCount,\n                    startTime: answerStartTime,\n                    endTime: correctAnswerTime\n                })\n                if (this.state.whichQuiz + 1 === this.state.quizs.length) {\n                    this.setState(state => ({\n                        currentQuiz: undefined,\n                        results: results,\n                        whichQuiz: -1,\n                        endTime: Date.now(),\n                        wrongCount: 0\n                    }));\n                } else {\n                    this.setState(state => ({\n                        currentQuiz: this.state.quizs[this.state.whichQuiz + 1],\n                        results: results,\n                        whichQuiz: this.state.whichQuiz + 1,\n                        wrongCount: 0\n                    }));\n                }\n            } else {\n                this.setState(state => ({ wrongCount: this.state.wrongCount + 1 }));\n            }\n        }\n    }\n    handleStart(quizs: Array<Quiz>) {\n        this.setState(state => ({\n            quizs: quizs,\n            results: [],\n            currentQuiz: (quizs.length>0) ? quizs[0] : undefined,\n            whichQuiz: 0,\n            startTime: Date.now(),\n            endTime: undefined\n        }));\n    }\n    render() {\n        return (\n            <div className=\"game\">\n                <Questioner quizs={this.state.quizs} currentQuiz={this.state.currentQuiz} whichQuiz={this.state.whichQuiz} setQuizs={(quizs) => this.handleStart(quizs)} wrongCount={this.state.wrongCount} />\n                <NumberSelector onClick={(value) => this.handleSelect(value)} />\n                {this.state.endTime && <AnswerResultsView totalLapTime={this.state.endTime!! - this.state.startTime!!} results={this.state.results} />}\n            </div>\n        )\n    }\n}\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}